// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorio.BancoDados;

#nullable disable

namespace Repositorio.Migrations
{
    [DbContext(typeof(RestauranteContexto))]
    partial class RestauranteContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repositorio.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("senha");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR(11)")
                        .HasColumnName("telefone");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("clientes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "10437548902",
                            Email = "cristyanalexandrino.od@gmail.com",
                            Nome = "Cristyan",
                            Senha = "admin123",
                            Telefone = "47991392902"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "20437548902",
                            Email = "joao@gmail.com",
                            Nome = "João",
                            Senha = "admin123",
                            Telefone = "47981392902"
                        });
                });

            modelBuilder.Entity("Repositorio.Entidades.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte>("NumeroMesa")
                        .HasColumnType("TINYINT")
                        .HasColumnName("NumeroMesa");

                    b.Property<byte>("Status")
                        .HasColumnType("TINYINT")
                        .HasColumnName("statusMesa");

                    b.HasKey("Id");

                    b.ToTable("mesas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumeroMesa = (byte)1,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 2,
                            NumeroMesa = (byte)2,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 3,
                            NumeroMesa = (byte)3,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 4,
                            NumeroMesa = (byte)4,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 5,
                            NumeroMesa = (byte)5,
                            Status = (byte)0
                        },
                        new
                        {
                            Id = 6,
                            NumeroMesa = (byte)6,
                            Status = (byte)0
                        });
                });

            modelBuilder.Entity("Repositorio.Entidades.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("INT")
                        .HasColumnName("id_cliente");

                    b.Property<int>("MesaId")
                        .HasColumnType("INT")
                        .HasColumnName("id_mesa");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("observacao");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MesaId");

                    b.ToTable("pedidos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            MesaId = 1,
                            Observacao = "Bem quente"
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            MesaId = 2,
                            Observacao = "Bem quente"
                        });
                });

            modelBuilder.Entity("Repositorio.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("categoria");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)")
                        .HasColumnName("nome");

                    b.Property<string>("ProdutoCaminho")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("produto_caminho");

                    b.Property<byte>("Status")
                        .HasColumnType("TINYINT")
                        .HasColumnName("statusProduto");

                    b.Property<decimal>("Valor")
                        .HasPrecision(5, 2)
                        .HasColumnType("DECIMAL(5,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.ToTable("produtos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = "Massas",
                            Descricao = "Yakissoba de frango e legumes",
                            Nome = "Yakissoba",
                            ProdutoCaminho = "favicon.ico",
                            Status = (byte)1,
                            Valor = 20m
                        },
                        new
                        {
                            Id = 2,
                            Categoria = "Bebidas",
                            Descricao = "Coca-cola 600ml",
                            Nome = "Coca-cola 600ml",
                            ProdutoCaminho = "favicon.ico",
                            Status = (byte)1,
                            Valor = 6m
                        });
                });

            modelBuilder.Entity("Repositorio.Entidades.ProdutoPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PedidoId")
                        .HasColumnType("INT")
                        .HasColumnName("pedido_id");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INT")
                        .HasColumnName("id_produto");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("produtos_pedidos", (string)null);
                });

            modelBuilder.Entity("Repositorio.Entidades.Pedido", b =>
                {
                    b.HasOne("Repositorio.Entidades.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositorio.Entidades.Mesa", "Mesa")
                        .WithMany("Pedidos")
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("Repositorio.Entidades.ProdutoPedido", b =>
                {
                    b.HasOne("Repositorio.Entidades.Pedido", "Pedido")
                        .WithMany("ProdutosPedidos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositorio.Entidades.Produto", "Produto")
                        .WithMany("ProdutosPedidos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Repositorio.Entidades.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Repositorio.Entidades.Mesa", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Repositorio.Entidades.Pedido", b =>
                {
                    b.Navigation("ProdutosPedidos");
                });

            modelBuilder.Entity("Repositorio.Entidades.Produto", b =>
                {
                    b.Navigation("ProdutosPedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
